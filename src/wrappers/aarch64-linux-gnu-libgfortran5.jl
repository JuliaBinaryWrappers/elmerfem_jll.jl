# Autogenerated wrapper script for elmerfem_jll for aarch64-linux-gnu-libgfortran5
export elmer_grid, elmer_solver, elmerf90, elmerld, matc, mesh2d, radiators, view_factors

using CompilerSupportLibraries_jll
using libblastrampoline_jll
JLLWrappers.@generate_wrapper_header("elmerfem")
JLLWrappers.@declare_executable_product(elmer_grid)
JLLWrappers.@declare_executable_product(elmer_solver)
JLLWrappers.@declare_executable_product(elmerf90)
JLLWrappers.@declare_executable_product(elmerld)
JLLWrappers.@declare_executable_product(matc)
JLLWrappers.@declare_executable_product(mesh2d)
JLLWrappers.@declare_executable_product(radiators)
JLLWrappers.@declare_executable_product(view_factors)
function __init__()
    JLLWrappers.@generate_init_header(CompilerSupportLibraries_jll, libblastrampoline_jll)
    JLLWrappers.@init_executable_product(
        elmer_grid,
        "bin/ElmerGrid",
    )

    JLLWrappers.@init_executable_product(
        elmer_solver,
        "bin/ElmerSolver",
    )

    JLLWrappers.@init_executable_product(
        elmerf90,
        "bin/elmerf90",
    )

    JLLWrappers.@init_executable_product(
        elmerld,
        "bin/elmerld",
    )

    JLLWrappers.@init_executable_product(
        matc,
        "bin/matc",
    )

    JLLWrappers.@init_executable_product(
        mesh2d,
        "bin/Mesh2D",
    )

    JLLWrappers.@init_executable_product(
        radiators,
        "bin/Radiators",
    )

    JLLWrappers.@init_executable_product(
        view_factors,
        "bin/ViewFactors",
    )

    JLLWrappers.@generate_init_footer()
    ENV["ELMER_HOME"] = artifact_dir
end  # __init__()
